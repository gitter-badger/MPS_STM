package STM.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class VolumeRank extends BaseConcept {
  public static final String concept = "STM.structure.VolumeRank";
  public static final String LIMIT = "limit";
  public static final String VALUE = "value";

  public VolumeRank(SNode node) {
    super(node);
  }

  public int getLimit() {
    return this.getIntegerProperty(VolumeRank.LIMIT);
  }

  public void setLimit(int value) {
    this.setIntegerProperty(VolumeRank.LIMIT, value);
  }

  public DiscountValue getValue() {
    return (DiscountValue) this.getChild(DiscountValue.class, VolumeRank.VALUE);
  }

  public void setValue(DiscountValue node) {
    super.setChild(VolumeRank.VALUE, node);
  }

  public static VolumeRank newInstance(SModel sm, boolean init) {
    return (VolumeRank) SModelUtil_new.instantiateConceptDeclaration("STM.structure.VolumeRank", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static VolumeRank newInstance(SModel sm) {
    return VolumeRank.newInstance(sm, false);
  }
}
