package STM.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AtomicBlock extends Statement {
  public static final String concept = "STM.structure.AtomicBlock";
  public static final String BODY = "body";

  public AtomicBlock(SNode node) {
    super(node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, AtomicBlock.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(AtomicBlock.BODY, node);
  }

  public static AtomicBlock newInstance(SModel sm, boolean init) {
    return (AtomicBlock) SModelUtil_new.instantiateConceptDeclaration("STM.structure.AtomicBlock", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AtomicBlock newInstance(SModel sm) {
    return AtomicBlock.newInstance(sm, false);
  }
}
