package STM.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.lang.core.structure.INamedConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class DiscountRuleSet extends BaseConcept implements INamedConcept {
  public static final String concept = "STM.structure.DiscountRuleSet";
  public static final String PRODUCT = "product";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String VALID_FROM = "validFrom";
  public static final String VALID_TO = "validTo";
  public static final String RULES = "rules";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public DiscountRuleSet(SNode node) {
    super(node);
  }

  public String getProduct() {
    return this.getProperty(DiscountRuleSet.PRODUCT);
  }

  public void setProduct(String value) {
    this.setProperty(DiscountRuleSet.PRODUCT, value);
  }

  public String getName() {
    return this.getProperty(DiscountRuleSet.NAME);
  }

  public void setName(String value) {
    this.setProperty(DiscountRuleSet.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(DiscountRuleSet.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(DiscountRuleSet.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(DiscountRuleSet.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(DiscountRuleSet.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(DiscountRuleSet.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(DiscountRuleSet.VIRTUAL_PACKAGE, value);
  }

  public Expression getValidFrom() {
    return (Expression) this.getChild(Expression.class, DiscountRuleSet.VALID_FROM);
  }

  public void setValidFrom(Expression node) {
    super.setChild(DiscountRuleSet.VALID_FROM, node);
  }

  public Expression getValidTo() {
    return (Expression) this.getChild(Expression.class, DiscountRuleSet.VALID_TO);
  }

  public void setValidTo(Expression node) {
    super.setChild(DiscountRuleSet.VALID_TO, node);
  }

  public int getRulesesCount() {
    return this.getChildCount(DiscountRuleSet.RULES);
  }

  public Iterator<DiscountRule> ruleses() {
    return this.children(DiscountRule.class, DiscountRuleSet.RULES);
  }

  public List<DiscountRule> getRuleses() {
    return this.getChildren(DiscountRule.class, DiscountRuleSet.RULES);
  }

  public void addRules(DiscountRule node) {
    this.addChild(DiscountRuleSet.RULES, node);
  }

  public void insertRules(DiscountRule prev, DiscountRule node) {
    this.insertChild(prev, DiscountRuleSet.RULES, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(DiscountRuleSet.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, DiscountRuleSet.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, DiscountRuleSet.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(DiscountRuleSet.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, DiscountRuleSet.SMODEL_ATTRIBUTE, node);
  }

  public static DiscountRuleSet newInstance(SModel sm, boolean init) {
    return (DiscountRuleSet) SModelUtil_new.instantiateConceptDeclaration("STM.structure.DiscountRuleSet", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static DiscountRuleSet newInstance(SModel sm) {
    return DiscountRuleSet.newInstance(sm, false);
  }
}
