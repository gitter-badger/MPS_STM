package STM.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.internal.collections.runtime.backports.LinkedList;

public enum Parallelism {
  sequentially("sequentially", "sequential"),
  in_parallel("in parallel", "parallel");

  private String myName;
  private String myValue;

  Parallelism(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }

  public String getName() {
    return this.myName;
  }

  public String getValueAsString() {
    return this.myValue;
  }

  public String getValue() {
    return this.myValue;
  }

  public static List<Parallelism> getConstants() {
    List<Parallelism> list = ListSequence.fromList(new LinkedList<Parallelism>());
    ListSequence.fromList(list).addElement(Parallelism.sequentially);
    ListSequence.fromList(list).addElement(Parallelism.in_parallel);
    return list;
  }

  public static Parallelism getDefault() {
    return Parallelism.sequentially;
  }

  public static Parallelism parseValue(String value) {
    if (value == null) {
      return Parallelism.getDefault();
    }
    if (value.equals(Parallelism.sequentially.getValueAsString())) {
      return Parallelism.sequentially;
    }
    if (value.equals(Parallelism.in_parallel.getValueAsString())) {
      return Parallelism.in_parallel;
    }
    return Parallelism.getDefault();
  }
}
