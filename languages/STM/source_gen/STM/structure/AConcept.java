package STM.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AConcept extends BaseConcept {
  public static final String concept = "STM.structure.AConcept";
  public static final String FOO = "foo";
  public static final String B = "b";
  public static final String BW = "bw";

  public AConcept(SNode node) {
    super(node);
  }

  public String getFoo() {
    return this.getProperty(AConcept.FOO);
  }

  public void setFoo(String value) {
    this.setProperty(AConcept.FOO, value);
  }

  public BConcept getB() {
    return (BConcept) this.getReferent(BConcept.class, AConcept.B);
  }

  public void setB(BConcept node) {
    super.setReferent(AConcept.B, node);
  }

  public BConcept getBw() {
    return (BConcept) this.getReferent(BConcept.class, AConcept.BW);
  }

  public void setBw(BConcept node) {
    super.setReferent(AConcept.BW, node);
  }

  public static AConcept newInstance(SModel sm, boolean init) {
    return (AConcept) SModelUtil_new.instantiateConceptDeclaration("STM.structure.AConcept", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AConcept newInstance(SModel sm) {
    return AConcept.newInstance(sm, false);
  }
}
