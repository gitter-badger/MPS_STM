package STM.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class AtomicExpression extends Expression {
  public static final String concept = "STM.structure.AtomicExpression";
  public static final String CLOSURE = "closure";

  public AtomicExpression(SNode node) {
    super(node);
  }

  public ClosureLiteral getClosure() {
    return (ClosureLiteral) this.getChild(ClosureLiteral.class, AtomicExpression.CLOSURE);
  }

  public void setClosure(ClosureLiteral node) {
    super.setChild(AtomicExpression.CLOSURE, node);
  }

  public static AtomicExpression newInstance(SModel sm, boolean init) {
    return (AtomicExpression) SModelUtil_new.instantiateConceptDeclaration("STM.structure.AtomicExpression", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static AtomicExpression newInstance(SModel sm) {
    return AtomicExpression.newInstance(sm, false);
  }
}
