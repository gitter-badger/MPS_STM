package STM.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;

public class CreateEmptyVolumeDiscount_Intention extends BaseIntention implements Intention {
  public CreateEmptyVolumeDiscount_Intention() {
  }

  public String getConcept() {
    return "STM.structure.DiscountRuleSet";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Create Empty Volume Discount";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode rule = SNodeFactoryOperations.createNewNode("STM.structure.VolumeDiscountRule", null);
    ListSequence.fromList(SLinkOperations.getTargets(rule, "ranks", true)).clear();
    ListSequence.fromList(SLinkOperations.getTargets(node, "rules", true)).addElement(rule);
    editorContext.select(rule);
  }

  public String getLocationString() {
    return "STM.intentions";
  }
}
