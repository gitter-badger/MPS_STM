package STM.intentions;

/*Generated by MPS */

import jetbrains.mps.intentions.BaseIntention;
import jetbrains.mps.intentions.Intention;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.nodeEditor.EditorContext;
import jetbrains.mps.smodel.action.SNodeFactoryOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class TurnToAbsoluteDiscountValue_Intention extends BaseIntention implements Intention {
  public TurnToAbsoluteDiscountValue_Intention() {
  }

  public String getConcept() {
    return "STM.structure.PercentDiscountValue";
  }

  public boolean isParameterized() {
    return false;
  }

  public boolean isErrorIntention() {
    return false;
  }

  public boolean isAvailableInChildNodes() {
    return false;
  }

  public String getDescription(final SNode node, final EditorContext editorContext) {
    return "Turn to Absolute";
  }

  public void execute(final SNode node, final EditorContext editorContext) {
    SNode absoluteDiscountValue = SNodeFactoryOperations.createNewNode("STM.structure.AbsoluteDiscountValue", null);
    SPropertyOperations.set(absoluteDiscountValue, "value", "" + SPropertyOperations.getInteger(node, "percent"));
    SNodeOperations.replaceWithAnother(node, absoluteDiscountValue);
  }

  public String getLocationString() {
    return "STM.intentions";
  }
}
