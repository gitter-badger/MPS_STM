package STM.behavior;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BehaviorDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.interpreted.BehaviorAspectInterpreted;

public class BehaviorAspectDescriptor implements jetbrains.mps.smodel.runtime.BehaviorAspectDescriptor {
  private static String[] stringSwitchCases_846f5o_a0a0a = new String[]{"STM.structure.AConcept", "STM.structure.AbsoluteDiscountValue", "STM.structure.AsyncClosureExecution", "STM.structure.AtomicBlock", "STM.structure.AtomicClosureLiteral", "STM.structure.AtomicExpression", "STM.structure.BConcept", "STM.structure.CConcept", "STM.structure.CrossSellDiscountRule", "STM.structure.DiscountRuleSet", "STM.structure.PercentDiscountValue", "STM.structure.PromotionalDiscountRule", "STM.structure.URL", "STM.structure.VolumeDiscountRule", "STM.structure.VolumeRank", "STM.structure.WordScan"};

  public BehaviorAspectDescriptor() {
  }

  public BehaviorDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a, fqName)) {
      case 3:
        return new AtomicBlock_BehaviorDescriptor();
      case 5:
        return new AtomicExpression_BehaviorDescriptor();
      case 4:
        return new AtomicClosureLiteral_BehaviorDescriptor();
      case 2:
        return new AsyncClosureExecution_BehaviorDescriptor();
      case 9:
        return new DiscountRuleSet_BehaviorDescriptor();
      case 13:
        return new VolumeDiscountRule_BehaviorDescriptor();
      case 8:
        return new CrossSellDiscountRule_BehaviorDescriptor();
      case 11:
        return new PromotionalDiscountRule_BehaviorDescriptor();
      case 10:
        return new PercentDiscountValue_BehaviorDescriptor();
      case 1:
        return new AbsoluteDiscountValue_BehaviorDescriptor();
      case 14:
        return new VolumeRank_BehaviorDescriptor();
      case 15:
        return new WordScan_BehaviorDescriptor();
      case 12:
        return new URL_BehaviorDescriptor();
      case 0:
        return new AConcept_BehaviorDescriptor();
      case 6:
        return new BConcept_BehaviorDescriptor();
      case 7:
        return new CConcept_BehaviorDescriptor();
      default:
        return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
    }
  }
}
