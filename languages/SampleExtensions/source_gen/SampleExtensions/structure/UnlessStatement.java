package SampleExtensions.structure;

/*Generated by MPS */

import jetbrains.mps.baseLanguage.structure.Statement;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.baseLanguage.structure.Expression;
import jetbrains.mps.baseLanguage.structure.StatementList;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class UnlessStatement extends Statement {
  public static final String concept = "SampleExtensions.structure.UnlessStatement";
  public static final String CONDITION = "condition";
  public static final String BODY = "body";

  public UnlessStatement(SNode node) {
    super(node);
  }

  public Expression getCondition() {
    return (Expression) this.getChild(Expression.class, UnlessStatement.CONDITION);
  }

  public void setCondition(Expression node) {
    super.setChild(UnlessStatement.CONDITION, node);
  }

  public StatementList getBody() {
    return (StatementList) this.getChild(StatementList.class, UnlessStatement.BODY);
  }

  public void setBody(StatementList node) {
    super.setChild(UnlessStatement.BODY, node);
  }

  public static UnlessStatement newInstance(SModel sm, boolean init) {
    return (UnlessStatement) SModelUtil_new.instantiateConceptDeclaration("SampleExtensions.structure.UnlessStatement", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static UnlessStatement newInstance(SModel sm) {
    return UnlessStatement.newInstance(sm, false);
  }
}
